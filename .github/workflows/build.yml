name: Build CSV Downloader Apps

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "pyinstaller>=6.0" requests tqdm
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build macOS universal app
        run: |
          pyinstaller --onefile --windowed \
            --target-arch universal2 \
            --name "CSV Downloader" csv_downloader.py
          chmod +x "dist/CSV Downloader.app/Contents/MacOS/CSV Downloader"

      - name: Verify macOS binary
        run: |
          echo "Checking executable bit..."
          ls -l "dist/CSV Downloader.app/Contents/MacOS/CSV Downloader"

          echo "Checking architectures..."
          ARCHS=$(lipo -info "dist/CSV Downloader.app/Contents/MacOS/CSV Downloader")
          echo $ARCHS

          if [[ "$ARCHS" != *"x86_64"* ]] || [[ "$ARCHS" != *"arm64"* ]]; then
            echo "❌ Binary is not universal2 (x86_64 + arm64)"
            exit 1
          fi

          if [[ ! -x "dist/CSV Downloader.app/Contents/MacOS/CSV Downloader" ]]; then
            echo "❌ Binary is not marked executable"
            exit 1
          fi

          echo "✅ Binary looks good (executable + universal2)."

      - name: Zip macOS app correctly
        run: |
          cd dist
          ditto -c -k --sequesterRsrc --keepParent "CSV Downloader.app" "CSV-Downloader-macOS.zip"

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: CSV-Downloader-macOS
          path: dist/CSV-Downloader-macOS.zip

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests tqdm
          if (Test-Path requirements.txt) { pip install -r requirements.txt }

      - name: Build Windows exe
        run: |
          pyinstaller --onefile --windowed --name "CSV Downloader" csv_downloader.py

      - name: Zip Windows exe
        run: |
          powershell Compress-Archive -Path "dist/CSV Downloader.exe" -DestinationPath "dist/CSV-Downloader-Windows.zip"

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: CSV-Downloader-Windows
          path: dist/CSV-Downloader-Windows.zip

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests tqdm
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build Linux binary
        run: |
          pyinstaller --onefile --windowed --name "CSV Downloader" csv_downloader.py

      - name: Zip Linux binary
        run: |
          cd dist
          zip -r "CSV-Downloader-Linux.zip" "CSV Downloader"

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: CSV-Downloader-Linux
          path: dist/CSV-Downloader-Linux.zip
